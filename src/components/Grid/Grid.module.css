.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-row-count), 1fr);
  grid-template-rows: repeat(var(--grid-col-count), 1fr);

  /* Define grid lines */
  background-color: black;
  gap: 2px;
  border: 2px solid black;

  user-select: none;
}

.gridCell {
  background-color: var(--background-color);
  aspect-ratio: 1 / 1;
  line-height: 0;

  width: 100%;
  height: 100%;

  position: relative;
  display: grid;
  place-content: center;
}

.cursorWord {
  background-color: var(--cursor-color);
}

.cursorCell {
  background-color: var(--active-cell-color);
}

.filledCell {
  background-color: var(--filled-cell-color);
}

.fillCellHoverIndicator {
  background: var(--filled-cell-hover-indicator);
}

.mirroredFillCellHoverIndicator {
  background: var(--filled-cell-mirror-hover-indicator);
}

.incorrectCell {
  color: #d61400;
}

.gridCellNumber {
  position: absolute;
  top: var(--cell-number-top-offset);
  left: var(--cell-number-left-offset);
  font-size: var(--cell-number-font-size);
}

.gridCellValueWrapper {
  display: grid;
  font-size: var(--cell-value-font-size);

  /* Shift cell value slightly down from center for visual balance */
  transform: translate(0, 0.5rem);
}

.gridCellValue {
  grid-area: 1/1;
  text-align: center;
  width: 100%;
}

.hiddenInput {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  height: 0;
  width: 0;
  /* Place it out of the viewport */
  left: -9999px;
}

.fadeIn {
  opacity: 0;
  animation: fade-in var(--fade-in-duration) forwards var(--fade-out-duration);
}

.fadeOut {
  opacity: 1;
  pointer-events: none;
  grid-area: 1/1;
  animation: fade-out var(--fade-out-duration) forwards;
}

.textVisible {
  visibility: visible;
}

.textInvisible {
  visibility: hidden;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}
